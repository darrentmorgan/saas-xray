name: Stable Tests Only

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-stable:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: saas_xray_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6380:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          backend/package-lock.json
          shared-types/package-lock.json
    
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        cd ../shared-types && npm ci
    
    - name: Build shared types
      run: |
        cd shared-types && npm run build
    
    - name: Build backend
      run: |
        cd backend && npm run build
    
    - name: Run stable tests only
      run: |
        cd backend && npm run test:stable
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5433
        DB_NAME: saas_xray_test
        DB_USER: postgres
        DB_PASSWORD: password
        REDIS_URL: redis://localhost:6380
        JWT_SECRET: test-jwt-secret-with-sufficient-entropy-for-hmac-sha256-algorithm
        JWT_ALGORITHM: HS256
        MASTER_ENCRYPTION_KEY: test_master_encryption_key_with_sufficient_length_for_aes_256_gcm_encryption
        ENCRYPTION_SALT: test-salt-for-key-derivation

  typescript-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          backend/package-lock.json
          shared-types/package-lock.json
    
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        cd ../shared-types && npm ci
    
    - name: Build shared types
      run: |
        cd shared-types && npm run build
    
    - name: TypeScript compilation check
      run: |
        cd backend && npm run build