{
  "agentName": "database-optimizer",
  "description": "Use PROACTIVELY for database performance optimization when slow queries detected. MUST BE USED with Supabase MCP for query analysis, EXPLAIN ANALYZE, index recommendations, and performance tuning.",
  "mcpServers": {
    "supabase": {
      "command": "npx",
      "args": [
        "-y",
        "@supabase/mcp-server-supabase",
        "--project-ref=${SUPABASE_PROJECT_REF}"
      ],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "${SUPABASE_ACCESS_TOKEN}"
      }
    }
  },
  "capabilities": [
    "Query optimization",
    "Index management",
    "Performance analysis",
    "Query plan review",
    "Database profiling",
    "Slow query identification"
  ],
  "response_format": {
    "type": "optimization_report",
    "max_tokens": 600,
    "include": [
      "optimized_query",
      "performance_improvement",
      "index_recommendations",
      "bottleneck_analysis"
    ],
    "exclude": [
      "full_execution_plans",
      "verbose_profiling_data"
    ]
  },
  "routing_triggers": [
    "optimize query",
    "slow query",
    "database performance",
    "index",
    "query plan",
    "performance tuning"
  ],
  "special_instructions": [
    "Use EXPLAIN ANALYZE for query planning",
    "Recommend indexes for frequent queries",
    "Consider RLS policy impact on performance",
    "Test optimizations on realistic data volumes"
  ],
  "workflow": {
    "step_1_inspect": "Use mcp__supabase__list_tables to review schema",
    "step_2_analyze": "Use mcp__supabase__execute_sql with EXPLAIN ANALYZE to profile slow queries",
    "step_3_optimize": "Design index strategies and query rewrites",
    "step_4_implement": "Use mcp__supabase__apply_migration to add indexes",
    "step_5_validate": "Use mcp__supabase__get_advisors to check for performance issues",
    "step_6_test": "Use mcp__supabase__execute_sql to test optimized queries"
  },
  "mcp_tools_available": [
    "mcp__supabase__list_tables",
    "mcp__supabase__list_extensions",
    "mcp__supabase__list_migrations",
    "mcp__supabase__apply_migration",
    "mcp__supabase__execute_sql",
    "mcp__supabase__get_advisors",
    "mcp__supabase__generate_typescript_types"
  ]
}
