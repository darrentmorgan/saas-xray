# SaaS X-Ray Production Docker Compose Configuration
# Provides a complete production-ready stack with all necessary services

version: '3.8'

services:
  # ==========================================
  # Application Services
  # ==========================================
  
  # Main SaaS X-Ray Application
  singura:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: singura-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3001}:${PORT:-3001}"
    environment:
      # Application Configuration
      NODE_ENV: production
      PORT: ${PORT:-3001}
      
      # Database Configuration
      DATABASE_URL: postgresql://${DB_USER:-singura}:${DB_PASSWORD:-singura123}@postgres:5432/${DB_NAME:-singura}
      
      # Redis Configuration
      REDIS_URL: redis://redis:6379
      
      # Security Configuration
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      SESSION_SECRET: ${SESSION_SECRET}
      
      # OAuth Configuration
      SLACK_CLIENT_ID: ${SLACK_CLIENT_ID}
      SLACK_CLIENT_SECRET: ${SLACK_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      
      # Application URLs
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      BACKEND_URL: ${BACKEND_URL:-http://localhost:3001}
      
      # Feature Flags
      ENABLE_REAL_TIME: "true"
      ENABLE_BACKGROUND_JOBS: "true"
      ENABLE_AUDIT_LOGGING: "true"
      
      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: json
      
      # Performance Configuration
      MAX_REQUEST_SIZE: "10mb"
      REQUEST_TIMEOUT: "30000"
      
      # Rate Limiting
      RATE_LIMIT_WINDOW: "900000"  # 15 minutes
      RATE_LIMIT_MAX: "100"
      
    volumes:
      - app-logs:/app/logs
      - app-uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - singura-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-3001}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # ==========================================
  # Database Services
  # ==========================================
  
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: singura-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-singura}
      POSTGRES_USER: ${DB_USER:-singura}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-singura123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - singura-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-singura} -d ${DB_NAME:-singura}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
        reservations:
          memory: 256M
          cpus: '0.1'

  # ==========================================
  # Cache and Queue Services
  # ==========================================
  
  # Redis for Caching and Job Queues
  redis:
    image: redis:7-alpine
    container_name: singura-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory ${REDIS_MAXMEMORY:-256mb} --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - singura-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.2'
        reservations:
          memory: 128M
          cpus: '0.05'

  # ==========================================
  # Monitoring and Observability
  # ==========================================
  
  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: singura-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx-logs:/var/log/nginx
      - ${SSL_CERT_PATH:-./certs}:/etc/nginx/certs:ro
    depends_on:
      - singura
    networks:
      - singura-network
    profiles:
      - production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

# ==========================================
# Network Configuration
# ==========================================
networks:
  singura-network:
    driver: bridge
    name: singura-network

# ==========================================
# Volume Configuration  
# ==========================================
volumes:
  # Database Storage
  postgres-data:
    driver: local
    name: singura-postgres-data
  
  # Redis Storage
  redis-data:
    driver: local
    name: singura-redis-data
  
  # Application Storage
  app-logs:
    driver: local
    name: singura-app-logs
  
  app-uploads:
    driver: local
    name: singura-app-uploads
  
  # Nginx Logs
  nginx-logs:
    driver: local
    name: singura-nginx-logs